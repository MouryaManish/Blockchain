var Web3 = require('web3');

var abi = [
	{
		"constant": false,
		"inputs": [
			{
				"name": "number",
				"type": "uint8"
			}
		],
		"name": "bet",
		"outputs": [],
		"payable": true,
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [],
		"name": "master_reset",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [],
		"name": "reset",
		"outputs": [
			{
				"name": "",
				"type": "bytes"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [],
		"name": "results",
		"outputs": [
			{
				"name": "",
				"type": "string"
			}
		],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "_to",
				"type": "address"
			}
		],
		"name": "send_invitation",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"constant": false,
		"inputs": [
			{
				"name": "N",
				"type": "uint8"
			}
		],
		"name": "start_betting",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "_check",
				"type": "address"
			}
		],
		"name": "address_state",
		"outputs": [
			{
				"name": "",
				"type": "int256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "_of",
				"type": "address"
			}
		],
		"name": "get_balance",
		"outputs": [
			{
				"name": "",
				"type": "uint256"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "get_range",
		"outputs": [
			{
				"name": "",
				"type": "uint8"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "get_winning_number",
		"outputs": [
			{
				"name": "",
				"type": "uint8"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "lossers_address",
		"outputs": [
			{
				"name": "",
				"type": "address"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "read_general_message",
		"outputs": [
			{
				"name": "",
				"type": "string"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "read_message",
		"outputs": [
			{
				"name": "",
				"type": "string"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [],
		"name": "winners_address",
		"outputs": [
			{
				"name": "",
				"type": "address[]"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	}
];

var contractAddress;
var accountsInfo;
var userList;
var contractObject;
var user=0;
var wallet;
var privateKey;
var money;
var bettingRange;
var provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');
var web3 = new Web3(provider); // connecting to ganache
contractObject = new web3.eth.Contract(abi);
console.log("abi contract object created");
document.getElementById("dropbtn-id").addEventListener("click",dropDownMenu);
document.getElementById("user-switch-id").addEventListener("click",user_switch);
document.getElementById("deploy-button-id").addEventListener("click",deploy);
document.getElementById("invitation-button-id").addEventListener("click",sendInvitation);
document.getElementById("startBetting-button-id").addEventListener("click",startBetting);
document.getElementById("personal-message-button-id").addEventListener("click",personalMessage);
document.getElementById("betting-button-id").addEventListener("click",bet);
document.getElementById("range-button-id").addEventListener("click",getRange);
document.getElementById("balance-button-id").addEventListener("click",getBalance);
document.getElementById("result-button-id").addEventListener("click",result);
document.getElementById("random-number-button-id").addEventListener("click",winningNumbers);
document.getElementById("winning-numbers-button-id").addEventListener("click",winners);
document.getElementById("looser-number-button-id").addEventListener("click",lossers);
document.getElementById("address-state-id").addEventListener("click",checkPersonalState);
document.getElementById("reset-button-id").addEventListener("click",resetContract);
document.getElementById("master-reset-id").addEventListener("click",masterReset);



window.onclick = function(e) {
  if (!e.target.matches('.dropbtn-class')) {
    var myDropdown = document.getElementById("myDropdown-id");
      if (myDropdown.classList.contains('show')) {
        myDropdown.classList.remove('show');
      }
  }
}

function dropDownMenu(){
	    document.getElementById("myDropdown-id").classList.toggle("show");
		console.log("from drop down");
}

function user_switch(){
	for(var i=0;i<4;i++){
		if(document.getElementById(i.toString()).checked){
			user = i;
			if(i==0){
			document.getElementById("selected-account-id").innerHTML="Owner";
			}else{
				document.getElementById("selected-account-id").innerHTML=i+"th Account";
			}
			
		}
	}
}




const byte_code ={
	data: '0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600760006101000a81548160ff0219169083600481111561007157fe5b0217905550613e4e806100856000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631e279a37146100d55780632c2febf41461012c5780632f6e51d4146101985780634b9b5aef146101c8578063737bf213146101f95780639054385b14610289578063940684f2146102a0578063a48bdb7c146102d1578063d0821b0e14610361578063d826f88f14610384578063e68fe97414610414578063eb206af414610457578063ef59f629146104e7578063f6cf7ed01461053e575b600080fd5b3480156100e157600080fd5b50610116600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610595565b6040518082815260200191505060405180910390f35b34801561013857600080fd5b506101416105b6565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610184578082015181840152602081019050610169565b505050509050019250505060405180910390f35b3480156101a457600080fd5b506101c6600480360381019080803560ff1690602001909291905050506106e1565b005b3480156101d457600080fd5b506101dd61091d565b604051808260ff1660ff16815260200191505060405180910390f35b34801561020557600080fd5b5061020e610934565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561024e578082015181840152602081019050610233565b50505050905090810190601f16801561027b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029557600080fd5b5061029e6109d6565b005b3480156102ac57600080fd5b506102b56110f8565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102dd57600080fd5b506102e66111ac565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561032657808201518184015260208101905061030b565b50505050905090810190601f1680156103535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610382600480360381019080803560ff169060200190929190505050611516565b005b34801561039057600080fd5b50610399611e54565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103d95780820151818401526020810190506103be565b50505050905090810190601f1680156104065780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561042057600080fd5b50610455600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127ca565b005b34801561046357600080fd5b5061046c612b05565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104ac578082015181840152602081019050610491565b50505050905090810190601f1680156104d95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104f357600080fd5b50610528600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612cec565b6040518082815260200191505060405180910390f35b34801561054a57600080fd5b50610553612eb5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b6060600360048111156105c557fe5b600760009054906101000a900460ff1660048111156105e057fe5b141515610655576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f67616d65206973207374696c6c206e6f7420656e64656400000000000000000081525060200191505060405180910390fd5b60088054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f6f6e6c79206f776e65722063616e20696e697469616c697a652074686520626581526020017f7474696e6700000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600060048111156107d957fe5b600760009054906101000a900460ff1660048111156107f457fe5b14151561088f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f2067616d6520686173206d6f7665642066726f6d20696e7669746174696f6e2081526020017f737461746500000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600260146101000a81548160ff021916908360ff1602179055506001600760006101000a81548160ff021916908360048111156108c957fe5b02179055506040805190810160405280601181526020017f62657474696e6720696e6974696174656400000000000000000000000000000081525060009080519060200190610919929190613c65565b5050565b6000600260159054906101000a900460ff16905090565b606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109cc5780601f106109a1576101008083540402835291602001916109cc565b820191906000526020600020905b8154815290600101906020018083116109af57829003601f168201915b5050505050905090565b6000803373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610a9e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f796f7520646f6e2774206861766520616363657373000000000000000000000081525060200191505060405180910390fd5b6000600760006101000a81548160ff02191690836004811115610abd57fe5b02179055506000600260146101000a81548160ff021916908360ff1602179055506000600260156101000a81548160ff021916908360ff16021790555060006009819055506000600381905550600091505b600480549050821015610b7c5760056000600484815481101515610b2f57fe5b90600052602060002090602091828204019190069054906101000a900460ff1660ff1660ff1681526020019081526020016000206000610b6f9190613ce5565b8180600101925050610b0f565b60046000610b8a9190613d06565b60086000610b989190613ce5565b600a6000610ba69190613ce5565b602060405190810160405280600081525060009080519060200190610bcc929190613c65565b50600091505b6006805490508210156110f457600060016000600685815481101515610bf457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015411156110e757600060016000600685815481101515610c7857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600060016000600685815481101515610cf957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600060016000600685815481101515610d7a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550602060405190810160405280600081525060016000600685815481101515610e0a57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006019080519060200190610e85929190613c65565b50600090505b60016000600684815481101515610e9e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018054905081101561105d57600060016000600685815481101515610f2657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600060016000600687815481101515610fa357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018481548110151561101857fe5b90600052602060002090602091828204019190069054906101000a900460ff1660ff1660ff168152602001908152602001600020819055508080600101915050610e8b565b60006001600060068581548110151561107257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301816110e59190613d2e565b505b8180600101925050610bd2565b5050565b60006001600481111561110757fe5b600760009054906101000a900460ff16600481111561112257fe5b141515611197576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f67616d65206e6f7420696e69746961746564000000000000000000000000000081525060200191505060405180910390fd5b600260149054906101000a900460ff16905090565b6060600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561129c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f20796f7520646f6e277420686176652061636365737320746f2074686973206681526020017f756e6374696f6e0000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6112a461321a565b6001600260149054906101000a900460ff1660ff16600242436003540101604051808281526020019150506020604051808303816000865af11580156112ee573d6000803e3d6000fd5b5050506040513d602081101561130357600080fd5b81019080805190602001909291905050506001900460ff1681151561132457fe5b0601600260156101000a81548160ff021916908360ff1602179055506040805190810160405280601081526020017f726573756c7473206465636c61726564000000000000000000000000000000008152506000908051906020019061138b929190613c65565b506003600760006101000a81548160ff021916908360048111156113ab57fe5b0217905550600060056000600260159054906101000a900460ff1660ff1660ff1681526020019081526020016000208054905011156114ba5760056000600260159054906101000a900460ff1660ff1660ff168152602001908152602001600020600890805461141c929190613d68565b50611425613240565b915061143082613464565b6114386136cc565b9050801561147d576040805190810160405280601b81526020017f616c6c20746865207472616e73666572207375636365737366756c00000000008152509250611511565b6040805190810160405280601481526020017f736f6d65207472616e73666572206661696c65640000000000000000000000008152509250611511565b6040805190810160405280600a81526020017f4e6f206f6e6520776f6e0000000000000000000000000000000000000000000081525060009080519060200190611505929190613c65565b5061150e613966565b92505b505090565b6001600481111561152357fe5b600760009054906101000a900460ff16600481111561153e57fe5b1415156115d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f796f752063616e277420706c617920746869732067616d65206174207468697381526020017f207374616765000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f796f7520617265206e6f742061206d656d62657220746f20706c61792074686981526020017f732067616d65000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60003411801561172c575060003373ffffffffffffffffffffffffffffffffffffffff163110155b15156117a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f6e65676174697665207472616e73656374696f6e206e6f7420616c6c6f77656481525060200191505060405180910390fd5b34343373ffffffffffffffffffffffffffffffffffffffff16310110151515611831576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f206e6f206f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b600260149054906101000a900460ff1660ff168160ff161115801561185a575060008160ff1610155b15156118ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f796f75206172652061626f7665207468652072616e676500000000000000000081525060200191505060405180910390fd5b61194e81600480548060200260200160405190810160405280929190818152602001828054801561194457602002820191906000526020600020906000905b82829054906101000a900460ff1660ff168152602001906001019060208260000104928301926001038202915080841161190d5790505b5050505050613b83565b1515611a1e57600481908060018154018082558091505090600182039060005260206000209060209182820401919006909192909190916101000a81548160ff021916908360ff16021790555050600560008260ff1660ff1681526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050611b4a565b611ac533600560008460ff1660ff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611abb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611a71575b5050505050613be1565b1515611b4957600560008260ff1660ff1681526020019081526020016000203390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5b611c0a81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805480602002602001604051908101604052809291908181526020018280548015611c0057602002820191906000526020600020906000905b82829054906101000a900460ff1660ff1681526020019060010190602082600001049283019260010382029150808411611bc95790505b5050505050613b83565b1515611c9957600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181908060018154018082558091505090600182039060005260206000209060209182820401919006909192909190916101000a81548160ff021916908360ff160217905550505b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008360ff1660ff1681526020019081526020016000206000828254019250508190555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254019250508190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600082825401925050819055508060ff163401600360008282540192505081905550346009600082825401925050819055506040805190810160405280600e81526020017f626574207375636365737366756c000000000000000000000000000000000000815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006019080519060200190611e50929190613c65565b5050565b6060600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6f6e6c79206f776e65722063616e20726573657420697400000000000000000081525060200191505060405180910390fd5b60016004811115611f2b57fe5b600760009054906101000a900460ff166004811115611f4657fe5b141515611fbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f67616d65206973206e6f7420696e2067616d65206d6f6465000000000000000081525060200191505060405180910390fd5b6004600760006101000a81548160ff02191690836004811115611fda57fe5b02179055506000600260146101000a81548160ff021916908360ff1602179055506000600260156101000a81548160ff021916908360ff16021790555060006009819055506000600381905550600091505b600480549050821015612099576005600060048481548110151561204c57fe5b90600052602060002090602091828204019190069054906101000a900460ff1660ff1660ff168152602001908152602001600020600061208c9190613ce5565b818060010192505061202c565b600460006120a79190613d06565b600860006120b59190613ce5565b600a60006120c39190613ce5565b6020604051908101604052806000815250600090805190602001906120e9929190613c65565b50600091505b6006805490508210156127685760006001600060068581548110151561211157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154111561275b5760068281548110151561218f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600160006006868154811015156121e657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549081150290604051600060405180830381858888f19350505050156126f65760006001600060068581548110151561228357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060006001600060068581548110151561230457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060006001600060068581548110151561238557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018190555060206040519081016040528060008152506001600060068581548110151561241557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006019080519060200190612490929190613c65565b50600090505b600160006006848154811015156124a957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805490508110156126685760006001600060068581548110151561253157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000600160006006878154811015156125ae57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018481548110151561262357fe5b90600052602060002090602091828204019190069054906101000a900460ff1660ff1660ff168152602001908152602001600020819055508080600101915050612496565b60006001600060068581548110151561267d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301816126f09190613d2e565b5061275a565b606060405190810160405280602181526020017f736f6d657468696e672077656e742077726f6e6720696e20726573657474696e81526020017f670000000000000000000000000000000000000000000000000000000000000081525092506127c5565b5b81806001019250506120ef565b6000600760006101000a81548160ff0219169083600481111561278757fe5b02179055506040805190810160405280601581526020017f7375636365737366756c6c79207265736574746564000000000000000000000081525092505b505090565b600060048111156127d757fe5b600760009054906101000a900460ff1660048111156127f257fe5b141515612867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f496e7669746174696f6e20686173206265656e20636c6f73656400000000000081525060200191505060405180910390fd5b6128f78160068054806020026020016040519081016040528092919081815260200182805480156128ed57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116128a3575b5050505050613be1565b1515612a755760068190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040805190810160405280600f81526020017f796f752061726520696e76697465640000000000000000000000000000000000815250600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006019080519060200190612a6f929190613c65565b50612b02565b6040805190810160405280601881526020017f796f752061726520616c72656164792061206d656d6265720000000000000000815250600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006019080519060200190612b00929190613c65565b505b50565b60603373ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612c0c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f796f7520617265206e6f742061206d656d62657200000000000000000000000081525060200191505060405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ce25780601f10612cb757610100808354040283529160200191612ce2565b820191906000526020600020905b815481529060010190602001808311612cc557829003601f168201915b5050505050905090565b600060036004811115612cfb57fe5b600760009054906101000a900460ff166004811115612d1657fe5b141515612d8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f67616d65206973207374696c6c206e6f7420656e64656400000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612e2757600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154039050919050565b60008060008060036004811115612ec857fe5b600760009054906101000a900460ff166004811115612ee357fe5b141515612f58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f67616d65206973207374696c6c206e6f7420656e64656400000000000000000081525060200191505060405180910390fd5b600090505b600680549050811015613211578260016000600684815481101515612f7e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460016000600685815481101515612ffa57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050154031215613204576001600060068381548110151561307d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506001600060068381548110151561311b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546001600060068481548110151561319757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501540392505b8080600101915050612f5d565b81935050505090565b6002600760006101000a81548160ff0219169083600481111561323957fe5b0217905550565b60008060008060009250600091505b60068054905082101561345b57600090505b60088054905081101561344e5760068281548110151561327d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166008828154811015156132cd57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156133bf576001600060088381548110151561332757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000600260159054906101000a900460ff1660ff1660ff1681526020019081526020016000205483019250613441565b6000600160006006858154811015156133d457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055505b8080600101915050613261565b818060010192505061324f565b82935050505090565b600080600090505b6008805490508110156136c757613581600260159054906101000a900460ff166001600060088581548110151561349f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030180548060200260200160405190810160405280929190818152602001828054801561357757602002820191906000526020600020906000905b82829054906101000a900460ff1660ff16815260200190600101906020826000010492830192600103820291508084116135405790505b5050505050613b83565b156136ba57826009546001600060088581548110151561359d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000600260159054906101000a900460ff1660ff1660ff168152602001908152602001600020540281151561363657fe5b049150816001600060088481548110151561364d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055505b808060010191505061346c565b505050565b600080600090505b600880549050811015613946576008818154811015156136f057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001600060088581548110151561374757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549081150290604051600060405180830381858888f1935050505015613899576040805190810160405280601881526020017f77696e6e696e6720616d6f756e74207472616e736665726400000000000000008152506001600060088481548110151561381857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006019080519060200190613893929190613c65565b50613939565b600a6008828154811015156138aa57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b80806001019150506136d4565b6000600a80549050141561395d5760019150613962565b600091505b5090565b60603373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613a2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f20796f7520646f6e27742068617665206163636573730000000000000000000081525060200191505060405180910390fd5b60036004811115613a3a57fe5b600760009054906101000a900460ff166004811115613a5557fe5b141515613aca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f2063616e2774207472616e73666572207269676874206e6f770000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015613b4257613b7f565b6040805190810160405280601d81526020017f6d6f6e6579206e6f74207472616e73666572656420746f206f776e65720000008152509050613b80565b5b90565b6000806000809150600090505b83518160ff161015613bd6578460ff16848260ff16815181101515613bb157fe5b9060200190602002015160ff161415613bc957600191505b8080600101915050613b90565b819250505092915050565b6000806000809150600090505b83518160ff161015613c5a578473ffffffffffffffffffffffffffffffffffffffff16848260ff16815181101515613c2257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff161415613c4d57600191505b8080600101915050613bee565b819250505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613ca657805160ff1916838001178555613cd4565b82800160010185558215613cd4579182015b82811115613cd3578251825591602001919060010190613cb8565b5b509050613ce19190613dba565b5090565b5080546000825590600052602060002090810190613d039190613dba565b50565b50805460008255601f016020900490600052602060002090810190613d2b9190613dba565b50565b815481835581811115613d6357601f016020900481601f01602090048360005260206000209182019101613d629190613dba565b5b505050565b828054828255906000526020600020908101928215613da95760005260206000209182015b82811115613da8578254825591600101919060010190613d8d565b5b509050613db69190613ddf565b5090565b613ddc91905b80821115613dd8576000816000905550600101613dc0565b5090565b90565b613e1f91905b80821115613e1b57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101613de5565b5090565b905600a165627a7a723058202a8758fd5f78e651569ef7d68e2c61ae19d8da599d41e9873e953a122062c8c80029'
};

//********************coding for ui**********************************
async function getAccount(){
	var accountList = await Promise.resolve(web3.eth.getAccounts());
	return accountList;
}

accountsInfo = getAccount();
accountsInfo.then( function(useraccounts){
	userList = useraccounts;
});





async function deploy_Contract(){
	return await getAccount().then( function(useraccounts){	
		return contractObject.deploy(byte_code)
		.send({ from:useraccounts[0], //address
		gasPrice:'1000000000', //default to 1Gwei
		gas:'5000000', // default value, excess is returned.
		value:'0' // wei to transfer 
	});
	});
}

function deploy(){
	cerateWallet(); //***************wallet created at start
	contractAddress = Promise.resolve(deploy_Contract());
	
contractAddress.then(function(result){
	console.log("contract deployed");
	console.log(result.options.address);
	contractObject.options.address = result.options.address;
	document.getElementById("deploy-text-id").innerHTML="Conctract Deployed,Check Console";
});

contractAddress.catch(function(error){
	console.log("error while deploying");
	console.log(error);
});
}

async function sendInvitation(){
	var state = await accountsInfo.then( function(useraccounts){
		try{
			
		var tx = contractObject.methods.send_invitation(useraccounts[user]);
		
		tx.send({
			from:useraccounts[user],
				gasPrice:'1000000000', //default to 1Gwei
				gas:'5000000', // default value, excess is returned.
				value:'0' // wei to transfer 
		}).once("transactionHash", function(receipt){
			console.log(receipt);
			console.log(" invitation sent for "+ useraccounts[user]);
			document.getElementById("invitation-text-id").innerHTML="invitation sent for account " + user;
		})
		.once("error",function(err){
			console.log("error from sendInvitation transection");
			alert("transection failed for invitation");
			console.log(err);
		});
	}catch(err){
		console.log("error in geting the transection object from sendInvitation()");
	}
});
}

async function personalMessage(){
	try{
		var tx = await contractObject.methods.read_message().call({
			from:userList[user].toString(),
			gasPrice:'1000000000', //default to 1Gwei
			gas:'5000000', // default value, excess is returned.
		}).then(function(data){
			console.log(data);
			document.getElementById("personal-text-id").innerHTML = data.toString();
		});
	}catch(err){
		console.log("error in geting the transection object from personalMessage()");
		console.log(err);	
	}
}

async function startBetting(){
	var input = parseInt(document.getElementById("startBetting-text-id").value);
	if(!isNaN(input) && input > 0 && input < 101){
		var tx = await contractObject.methods.start_betting(input);
		tx.send({
			from:userList[user],
				gasPrice:'1000000000', //default to 1Gwei
				gas:'5000000', // default value, excess is returned.
				value:'0' // wei to transfer 
		}).once("transactionHash", function(receipt){
			console.log(receipt);
			console.log("Betting started by "+ userList[user]);
			document.getElementById("startBetting-state-id").innerHTML="betting started by account" + user;
		})
		.once("error",function(err){
			console.log("error from startBetting()");
			alert("transection failed for startBetting");
			console.log(err);
		});
		
	}else{
		document.getElementById("startBetting-state-id").innerHTML= "enter a valid Number min 1 max 100";
	}
}


function cerateWallet(){
	wallet = web3.eth.accounts.wallet.create();
}

async function transectWithWallet(){
		if(wallet[userList[user]] === undefined){
			wallet.add({
			privateKey:privateKey,
			address:userList[user]
		});
		}	
	
		var number = parseInt(document.getElementById("betting-number-id").value);
		await getRange();
		if(number > 0 && number <= bettingRange){
			try{
				var tx = contractObject.methods.bet(number);
				var functionAbi = tx.encodeABI();
				var txObject = {
					from:wallet[userList[user]]["index"],
					to:contractObject.options.address,
					value:money,
					gas:'5000000', // default value, excess is returned.
					gasPrice:'1000000000', //default to 1Gwei
					data:functionAbi
				}
				
				var receipt = web3.eth.sendTransaction(txObject)
				.then(function(result){
					console.log(" transection done for betting");
					console.log(result);
					document.getElementById("betting-state-id").innerHTML = "Success";
				})
				.catch(function(err){
					console.log("error from transectWithWallet() while betting is returned");
					alert("error from transectWithWallet() while betting is returned");
					console.log(err);
				})

			}catch(err){
				console.log("error from transectWithWallet() while betting transection");
				alert("error from transectWithWallet() while betting transection");
				console.log(err);
			}
		}else{
			document.getElementById("betting-state-id").innerHTML = "error from transectWithWallet(). Number not in betting range";
		}
}




function bet(){
	money = Number(document.getElementById("betting-text-id").value);
	document.getElementById("betting-state-id").innerHTML="";

	if(wallet[userList[user]]!== undefined){
			console.log(user + " present in wallet");
			console.log(money);
			if(!isNaN(money) && money > 0){
				money = money.toString();
				money = web3.utils.toWei(money,'ether');
				transectWithWallet();
						
			}else{
				document.getElementById("betting-state-id").innerHTML= "enter a valid value";
				}	
		}else{
			console.log(user + "Not present in wallet");
			console.log(money);
			if(!isNaN(money) && money > 0){
				money = money.toString();
				money = web3.utils.toWei(money,'ether');
				var readData = document.getElementById("read-file-id");
				readData.addEventListener("change",readFiles,false);
				readData.style.display ="block";
						
			}else{
				document.getElementById("betting-state-id").innerHTML= "enter a valid value";
				}
		}	
}


function readFiles(){
	var filelist = this.files;
	if(filelist.length > 0){
		var readData = document.getElementById("read-file-id");
		readData.style.display ="none";
		var file = filelist[0];
		var reader = new FileReader();
		reader.onload = function(event){
			privateKey = event.target.result;
			transectWithWallet();
		}
		reader.readAsText(file);
		
	}else{
		document.getElementById("betting-state-id").innerHTML= "please select atleat one file";
	}
}

async function getRange(){
	try{
			var tx = contractObject.methods.get_range().call({
				from:userList[user].toString(),
				gasPrice:'1000000000', //default to 1Gwei
				gas:'5000000', // default value, excess is returned.
			})
			
			await tx.then(function(data){
				console.log(data);
				document.getElementById("range-text-id").innerHTML = data;
				bettingRange = data.toString();
			});
			
		}catch(err){
			console.log("error in geting the transection object from getRange()");
			alert("error in geting the transection object from getRange()");
			console.log(err);	
		}
}

async function getBalance(){
	try{
		var tx = await contractObject.methods.get_balance(userList[user].toString()).call({
			from:userList[user].toString(),
			gasPrice:'1000000000', //default to 1Gwei
			gas:'5000000', // default value, excess is returned.
		}).then(function(data){
			console.log(data);
			document.getElementById("balance-text-id").innerHTML = web3.utils.fromWei(data.toString())+ " ether";
		});
	}catch(err){
		console.log("error in geting the transection object from getBalance()");
		console.log(err);	
	}
}

async function result(){
	try{
		var tx = Promise.resolve(contractObject.methods.results().send({
			from:userList[user].toString(),
			gasPrice:'1000000000', //default to 1Gwei
			gas:'5000000', // default value, excess is returned.
			value:'0' // wei to transfer
		}));
	
	await tx.then(function(receipt){
		console.log("results successful");
		document.getElementById("result-id").innerHTML = "result declared";
		console.log(receipt);
	});
	
	await tx.catch(function(err){
		console.log("error from result() after send");
		alert("error from result() after send");
		console.log(err);
	});
	}catch(err){
		console.log("error from result() while sending tx");
		alert("error from result() while sending tx");
		console.log(err);
	}
}


async function winningNumbers(){
	try{
		var tx = await contractObject.methods.get_winning_number().call({
			from:userList[user].toString(),
			gasPrice:'1000000000', //default to 1Gwei
			gas:'5000000', // default value, excess is returned.
		}).then(function(data){
			console.log(data);
			document.getElementById("random-text-id").innerHTML = data.toString();
		});
	}catch(err){
		console.log("error in geting the transection object from winningNumbers()");
		console.log(err);	
	}
}

async function winners(){
	try{
		var tx = await contractObject.methods.winners_address().call({
			from:userList[user].toString(),
			gasPrice:'1000000000', //default to 1Gwei
			gas:'5000000', // default value, excess is returned.
		}).then(function(data){
			console.log(data);
			document.getElementById("winning-text-id").innerHTML = data.toString();
		});
	}catch(err){
		console.log("error in geting the transection object from winners()");
		console.log(err);	
	}
	
}

async function lossers(){
	try{
		var tx = await contractObject.methods.lossers_address().call({
			from:userList[user].toString(),
			gasPrice:'1000000000', //default to 1Gwei
			gas:'5000000', // default value, excess is returned.
		}).then(function(data){
			console.log(data);
			document.getElementById("losser-text-id").innerHTML = data.toString();
		});
	}catch(err){
		console.log("error in geting the transection object from lossers()");
		console.log(err);	
	}
	
}


function checkPersonalState(){
	try{
		var tx = contractObject.methods.address_state(userList[user].toString()).call({
			from:userList[user].toString(),
			gasPrice:'1000000000', //default to 1Gwei
			gas:'5000000', // default value, excess is returned.
		}).then(function(data){
			console.log(data);
			document.getElementById("address-status-id").innerHTML = web3.utils.fromWei(data.toString())+ " ether";
		})
		.catch(function(err){
			console.log("error in geting after call from checkPersonalState()");
			console.log(err);
		});
	}
	catch(err){
		console.log("error in geting the transection object from checkPersonalState()");
		console.log(err);	
	}
}

async function resetContract(){
	try{
		var tx = Promise.resolve(contractObject.methods.reset().send({
			from:userList[user].toString(),
			gasPrice:'1000000000', //default to 1Gwei
			gas:'5000000', // default value, excess is returned.
			value:'0' // wei to transfer
		}));
	
	await tx.then(function(receipt){
		console.log("reset successful");
		document.getElementById("reset-id").innerHTML = "contract reseted";
		console.log(receipt);
	});
	
	await tx.catch(function(err){
		console.log("error from resetContract() after send");
		alert("error from resetContract() after send");
		console.log(err);
		});
	}catch(err){
		console.log("error from resetContract() while sending tx");
		alert("error from resetContract() while sending tx");
		console.log(err);
	}
}

async function masterReset(){
	try{
		var tx = Promise.resolve(contractObject.methods.master_reset().send({
			from:userList[user].toString(),
			gasPrice:'1000000000', //default to 1Gwei
			gas:'5000000', // default value, excess is returned.
			value:'0' // wei to transfer
		}));
	
	await tx.then(function(receipt){
		console.log("master_reset successful");
		document.getElementById("master-reset-id").innerHTML = "contract master reseted";
		console.log(receipt);
	});
	
	await tx.catch(function(err){
		console.log("error from masterReset() after send");
		alert("error from masterReset() after send");
		console.log(err);
		});
	}catch(err){
		console.log("error from masterReset() after send");
		alert("error from masterReset() after send");
		console.log(err);
	}
	
}









